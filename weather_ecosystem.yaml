########################### WEATHER MICROSERVICE DEPLOYMENT #####################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-ecosystem-service
  namespace: default
  labels:
    app: weather-ecosystem-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weather-ecosystem-service
  template:
    metadata:
      labels:
        app: weather-ecosystem-service
    spec:
      containers:
        - name: weather-ecosystem-service
          image: lindq181/weather_ecosystem_service:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "1000m"
---
############################ PRODUCER MICROSERVICE DEPLOYMENT ####################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: we-producer-service
  namespace: default
  labels:
    app: we-producer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: we-producer-service
  template:
    metadata:
      labels:
        app: we-producer-service
    spec:
      containers:
        - name: we-producer-service
          image: lindq181/we_producer_service:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "1000m"
---
########################### ZOOKEEPER DEPLOYMENT #####################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: default
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.4.5
          ports:
            - containerPort: 2181
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
---
########################### KAFKA DEPLOYMENT #####################################
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-deployment
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: broker
          image: confluentinc/cp-kafka:7.4.5
          ports:
            - containerPort: 9092
          resources:
            requests:
              memory: "256Mi"
              cpu: "125m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://:29092,PLAINTEXT_INTERNAL://kafka-service:9092
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
---
############################# WEATHER MICROSERVICE SERVICE ###################################
apiVersion: v1
kind: Service
metadata:
  name: weather-ecosystem-service
  namespace: default
  labels:
    app: weather-ecosystem-service
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8081
      targetPort: 8080
  selector:
    app: weather-ecosystem-service
  type: LoadBalancer
---
############################# PRODUCER MICROSERVICE SERVICE ###################################
apiVersion: v1
kind: Service
metadata:
  name: we-producer-service
  namespace: default
  labels:
    app: we-producer-service
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8082
      targetPort: 8080
  selector:
    app: we-producer-service
  type: ClusterIP
---
############################ ZOOKEEPER SERVICE #######################################
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: default
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
---
############################ KAFKA SERVICE #######################################
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
---

